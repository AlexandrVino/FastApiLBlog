version: "3.9"

networks:
  backend:
    driver: bridge

services:
  pgsql:
    image: postgres:17.3
    container_name: pgsql
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(printenv POSTGRES_USER) -d $$(printenv POSTGRES_DB)"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [backend]

  api-migrations:
    depends_on:
      pgsql:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./migrations.dockerfile
    env_file:
      - ./.env
    networks: [backend]

  api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: api
    depends_on:
      api-migrations:
        condition: service_completed_successfully
      pgsql:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    networks: [backend]

volumes:
  pg-data:
